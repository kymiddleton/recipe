{"version":3,"sources":["index.js"],"names":["DirectoryView","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","SearchForm","searchVal","handleChange","clickHandler","selectedRecipes","map","recipe","i","RecipeCard","name","id","recipeHandler","key","DetailView","ingredients","instructions","value","onChange","className","onClick","App","state","recipes","chosenRecipe","event","console","log","target","_this","setState","preventDefault","filter","toLowerCase","includes","chooseRecipe","find","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9137944b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Reset.css';\nimport './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n\n\nconst DirectoryView = (props) => (\n    <div>\n    <SearchForm searchVal={props.searchVal} handleChange={props.handleChange} clickHandler={props.clickHandler}/>\n    {props.selectedRecipes.map((recipe, i) => <RecipeCard name={recipe.name} id={recipe.id} clickHandler={props.recipeHandler} key={i}/>)}\n    </div>\n);\n\nconst DetailView = (props) => (\n    <div>\n        <p>{props.recipe.name}</p>\n        <ol>\n            {props.recipe.ingredients.map((ingredients, i) => <li key={i}>{ingredients}</li>)}\n        </ol>\n        <ol>\n            {props.recipe.instructions.map((instructions, i) => <ol key={i}>{instructions}</ol>)}\n        </ol>\n    </div>\n)\n\nconst SearchForm = (props) => (\n    <form>\n        <input value = {props.searchVal} onChange={props.handleChange} />\n        {/* <button>Search</button> */}\n        <button className=\"btn btn-primary\" onClick={props.clickHandler}>Search</button>\n    </form>\n);\n\nconst RecipeCard = (props) => (\n    <div>\n        <p onClick={() => props.clickHandler(props.id)}>{props.name}</p>\n    </div>\n);\n\n/* <RecipeCard /> */\n    //     {<h2>Recipe Results:</h2>\n    //      {props.recipeList.map((recipe, i) => (\n    //          <RecipeCard id={recipe.id}\n    //          name={recipe.name}\n    //          ingredients={recipe.ingredients}\n    //          instructions={recipe.instructions}\n    //          key={i} \n    //     />))} }\n    //     {<button onClick={props.handler}> </button> }\n\nclass App extends React.Component {\n    state = {\n        recipes: [\n            {id: 1, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken', 'broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 2, name: 'Beef Noodle Soup', ingredients: ['noodles', 'beef', 'broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 3, name: 'Beef Stew', ingredients: ['beef', 'broth', 'carrots', 'potato'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 4, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 5, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 6, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 7, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 8, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 9, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 10, name:'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 11, name:'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 12, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 13, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 14, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n            {id: 15, name: 'Chicken Noodle Soup', ingredients: ['noodles', 'chicken broth', 'carrots'], instructions: ['open can', 'pour contents into sauce pan', 'heat contents over medium heat until desired temperature reached']},\n        ],\n        searchVal: '',\n        selectedRecipes: [],\n        chosenRecipe: {\n            id: '',\n            name: '',\n            ingredients: [],\n            instructions: []\n        }\n    }\n\n    handleChange = (event) => { //Setting state with the search value\n        console.log(event.target.value); //Only need this for change handlers\n        this.setState({ searchVal: event.target.value });\n    }\n\n    selectedRecipes = (event) => { //Setting state based on search function\n        event.preventDefault();\n        this.setState({ selectedRecipes: this.state.recipes.filter(recipe => recipe.name.toLowerCase().includes(this.state.searchVal.toLowerCase())) });\n    }\n    \n    chooseRecipe = (id) => {\n        console.log(id);\n        this.setState({chosenRecipe: this.state.recipes.find(recipe => recipe.id === id)})\n    }\n\n    render() {\n        return (\n            <div>\n                <DirectoryView\n                recipes = {this.state.recipes} \n                searchVal ={this.state.searchVal}\n                handleChange={this.handleChange}\n                selectedRecipes={this.state.selectedRecipes}\n                clickHandler={this.selectedRecipes}\n                recipeHandler={this.chooseRecipe}\n                />\n                {/* <DetailView recipe={this.state.recipes[1]}/> */}\n                <DetailView recipe={this.state.chosenRecipe}/>\n            </div>\n        );\n    }\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}